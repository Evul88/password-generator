{
  "version": 3,
  "sources": ["browser-external:crypto", "../../generate-password/src/generate.js", "../../generate-password/main.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"crypto\" has been externalized for browser compatibility. Cannot access \"crypto.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "var crypto = require('crypto');\n\nconst RANDOM_BATCH_SIZE = 256;\n\nvar randomIndex;\nvar randomBytes;\n\nvar getNextRandomValue = function() {\n\tif (randomIndex === undefined || randomIndex >= randomBytes.length) {\n\t\trandomIndex = 0;\n\t\trandomBytes = crypto.randomBytes(RANDOM_BATCH_SIZE);\n\t}\n\n\tvar result = randomBytes[randomIndex];\n\trandomIndex += 1;\n\n\treturn result;\n};\n\n// Generates a random number\nvar randomNumber = function(max) {\n\t// gives a number between 0 (inclusive) and max (exclusive)\n\tvar rand = getNextRandomValue();\n\twhile (rand >= 256 - (256 % max)) {\n\t\trand = getNextRandomValue();\n\t}\n\treturn rand % max;\n};\n\n// Possible combinations\nvar lowercase = 'abcdefghijklmnopqrstuvwxyz',\n\tuppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n\tnumbers = '0123456789',\n\tsymbols = '!@#$%^&*()+_-=}{[]|:;\"/?.><,`~',\n\tsimilarCharacters = /[ilLI|`oO0]/g,\n\tstrictRules = [\n\t\t{ name: 'lowercase', rule: /[a-z]/ },\n\t\t{ name: 'uppercase', rule: /[A-Z]/ },\n\t\t{ name: 'numbers', rule: /[0-9]/ },\n\t\t{ name: 'symbols', rule: /[!@#$%^&*()+_\\-=}{[\\]|:;\"/?.><,`~]/ }\n\t];\n\nvar generate = function(options, pool) {\n\tvar password = '',\n\t\toptionsLength = options.length,\n\t\tpoolLength = pool.length;\n\n\tfor (var i = 0; i < optionsLength; i++) {\n\t\tpassword += pool[randomNumber(poolLength)];\n\t}\n\n\tif (options.strict) {\n\t\t// Iterate over each rule, checking to see if the password works.\n\t\tvar fitsRules = strictRules.every(function(rule) {\n\t\t\t// If the option is not checked, ignore it.\n\t\t\tif (options[rule.name] == false) return true;\n\n\t\t\t// Treat symbol differently if explicit string is provided\n\t\t\tif (rule.name === 'symbols' && typeof options[rule.name] === 'string') {\n\t\t\t\t// Create a regular expression from the provided symbols\n\t\t\t\tvar re = new RegExp('['+options[rule.name]+']');\n\t\t\t\treturn re.test(password);\n\t\t\t}\n\n\t\t\t// Run the regex on the password and return whether\n\t\t\t// or not it matches.\n\t\t\treturn rule.rule.test(password);\n\t\t});\n\n\t\t// If it doesn't fit the rules, generate a new one (recursion).\n\t\tif (!fitsRules) return generate(options, pool);\n\t}\n\n\treturn password;\n};\n\n// Generate a random password.\nmodule.exports.generate = function(options) {\n\t// Set defaults.\n\toptions = options || {};\n\tif (!Object.prototype.hasOwnProperty.call(options, 'length')) options.length = 10;\n\tif (!Object.prototype.hasOwnProperty.call(options, 'numbers')) options.numbers = false;\n\tif (!Object.prototype.hasOwnProperty.call(options, 'symbols')) options.symbols = false;\n\tif (!Object.prototype.hasOwnProperty.call(options, 'exclude')) options.exclude = '';\n\tif (!Object.prototype.hasOwnProperty.call(options, 'uppercase')) options.uppercase = true;\n\tif (!Object.prototype.hasOwnProperty.call(options, 'lowercase')) options.lowercase = true;\n\tif (!Object.prototype.hasOwnProperty.call(options, 'excludeSimilarCharacters')) options.excludeSimilarCharacters = false;\n\tif (!Object.prototype.hasOwnProperty.call(options, 'strict')) options.strict = false;\n\n\tif (options.strict) {\n\t\tvar minStrictLength = 1 + (options.numbers ? 1 : 0) + (options.symbols ? 1 : 0) + (options.uppercase ? 1 : 0);\n\t\tif (minStrictLength > options.length) {\n\t\t\tthrow new TypeError('Length must correlate with strict guidelines');\n\t\t}\n\t}\n\n\t// Generate character pool\n\tvar pool = '';\n\n\t// lowercase\n\tif (options.lowercase) {\n\t\tpool += lowercase;\n\t}\n\n\t// uppercase\n\tif (options.uppercase) {\n\t\tpool += uppercase;\n\t}\n\t// numbers\n\tif (options.numbers) {\n\t\tpool += numbers;\n\t}\n\t// symbols\n\tif (options.symbols) {\n\t\tif (typeof options.symbols === 'string') {\n\t\t\tpool += options.symbols;\n\t\t} else {\n\t\t\tpool += symbols;\n\t\t}\n\t}\n\n\t// Throw error if pool is empty.\n\tif (!pool) {\n\t\tthrow new TypeError('At least one rule for pools must be true');\n\t}\n\n\t// similar characters\n\tif (options.excludeSimilarCharacters) {\n\t\tpool = pool.replace(similarCharacters, '');\n\t}\n\n\t// excludes characters from the pool\n\tvar i = options.exclude.length;\n\twhile (i--) {\n\t\tpool = pool.replace(options.exclude[i], '');\n\t}\n\n\tvar password = generate(options, pool);\n\n\treturn password;\n};\n\n// Generates multiple passwords at once with the same options.\nmodule.exports.generateMultiple = function(amount, options) {\n\tvar passwords = [];\n\n\tfor (var i = 0; i < amount; i++) {\n\t\tpasswords[i] = module.exports.generate(options);\n\t}\n\n\treturn passwords;\n};\n", "module.exports = require('./src/generate');\n"],
  "mappings": "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",
  "names": []
}
